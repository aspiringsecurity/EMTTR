{
  "f_type": "InteractionTemplate",
  "f_version": "1.0.0",
  "id": "1b8e4ebc3886509f3cd86dae20b0c9f95abae13011cd7a928e4377609b669292",
  "data": {
    "type": "transaction",
    "interface": "",
    "messages": {
      "title": {
        "i18n": {
          "en-US": "This transaction initializes a user's account to support TouchstoneProfessorMetasAcademyHackathon2023 NFTs"
        }
      }
    },
    "cadence": "import TouchstoneProfessorMetasAcademyHackathon2023 from 0xTouchstoneProfessorMetasAcademyHackathon2023\nimport NonFungibleToken from 0xNonFungibleToken\nimport MetadataViews from 0xMetadataViews\n// This transaction was auto-generated with the NFT Catalog (https://github.com/dapperlabs/nft-catalog)\n//\n// This transaction initializes a user's collection to support a specific NFT\n// \n// Collection Identifier: TouchstoneProfessorMetasAcademyHackathon2023\n//\n// Version: 0.1.1\n\ntransaction {\n\n  prepare(signer: AuthAccount) {\n    if signer.borrow<&TouchstoneProfessorMetasAcademyHackathon2023.Collection>(from: /storage/TouchstoneProfessorMetasAcademyHackathon2023Collection_0xfcbe1e1ed18c5a26) == nil {\n      let collection <- TouchstoneProfessorMetasAcademyHackathon2023.createEmptyCollection()\n      signer.save(<-collection, to: /storage/TouchstoneProfessorMetasAcademyHackathon2023Collection_0xfcbe1e1ed18c5a26)\n    }\n    if (signer.getCapability<&TouchstoneProfessorMetasAcademyHackathon2023.Collection{NonFungibleToken.CollectionPublic,NonFungibleToken.Receiver,MetadataViews.ResolverCollection}>(/public/TouchstoneProfessorMetasAcademyHackathon2023Collection_0xfcbe1e1ed18c5a26).borrow() == nil) {\n      signer.unlink(/public/TouchstoneProfessorMetasAcademyHackathon2023Collection_0xfcbe1e1ed18c5a26)\n      signer.link<&TouchstoneProfessorMetasAcademyHackathon2023.Collection{NonFungibleToken.CollectionPublic,NonFungibleToken.Receiver,MetadataViews.ResolverCollection}>(/public/TouchstoneProfessorMetasAcademyHackathon2023Collection_0xfcbe1e1ed18c5a26, target: /storage/TouchstoneProfessorMetasAcademyHackathon2023Collection_0xfcbe1e1ed18c5a26)\n    }\n  }\n\n}\n",
    "dependencies": {
      "0xTouchstoneProfessorMetasAcademyHackathon2023": {
        "TouchstoneProfessorMetasAcademyHackathon2023": {
          "mainnet": {
            "address": "0xfcbe1e1ed18c5a26",
            "contract": "TouchstoneProfessorMetasAcademyHackathon2023",
            "fq_address": "A.0xfcbe1e1ed18c5a26.TouchstoneProfessorMetasAcademyHackathon2023",
            "pin": "9e4c93fa6453b3a2b0f56a1e71ff3740398f59d4207815b15527748994ecd0f9",
            "pin_block_height": 47493006
          }
        }
      },
      "0xNonFungibleToken": {
        "NonFungibleToken": {
          "mainnet": {
            "address": "0x1d7e57aa55817448",
            "contract": "NonFungibleToken",
            "fq_address": "A.0x1d7e57aa55817448.NonFungibleToken",
            "pin": "83c9e3d61d3b5ebf24356a9f17b5b57b12d6d56547abc73e05f820a0ae7d9cf5",
            "pin_block_height": 47493009
          }
        }
      },
      "0xMetadataViews": {
        "MetadataViews": {
          "mainnet": {
            "address": "0x1d7e57aa55817448",
            "contract": "MetadataViews",
            "fq_address": "A.0x1d7e57aa55817448.MetadataViews",
            "pin": "ba061d95016d5506e9f5d1afda15d82eb066aa8b0552e8b26dc7950fa5714d51",
            "pin_block_height": 47493013
          }
        }
      }
    },
    "arguments": {}
  }
}