// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ERC721OrderCancelled extends ethereum.Event {
  get params(): ERC721OrderCancelled__Params {
    return new ERC721OrderCancelled__Params(this);
  }
}

export class ERC721OrderCancelled__Params {
  _event: ERC721OrderCancelled;

  constructor(event: ERC721OrderCancelled) {
    this._event = event;
  }

  get maker(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get nonce(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ERC721OrderFilled extends ethereum.Event {
  get params(): ERC721OrderFilled__Params {
    return new ERC721OrderFilled__Params(this);
  }
}

export class ERC721OrderFilled__Params {
  _event: ERC721OrderFilled;

  constructor(event: ERC721OrderFilled) {
    this._event = event;
  }

  get direction(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get maker(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get taker(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get nonce(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get erc20Token(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get erc20TokenAmount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get erc721Token(): Address {
    return this._event.parameters[6].value.toAddress();
  }

  get erc721TokenId(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get matcher(): Address {
    return this._event.parameters[8].value.toAddress();
  }
}

export class ERC721OrderPreSigned extends ethereum.Event {
  get params(): ERC721OrderPreSigned__Params {
    return new ERC721OrderPreSigned__Params(this);
  }
}

export class ERC721OrderPreSigned__Params {
  _event: ERC721OrderPreSigned;

  constructor(event: ERC721OrderPreSigned) {
    this._event = event;
  }

  get direction(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get maker(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get taker(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get expiry(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get nonce(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get erc20Token(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get erc20TokenAmount(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get fees(): Array<ERC721OrderPreSignedFeesStruct> {
    return this._event.parameters[7].value.toTupleArray<
      ERC721OrderPreSignedFeesStruct
    >();
  }

  get erc721Token(): Address {
    return this._event.parameters[8].value.toAddress();
  }

  get erc721TokenId(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get erc721TokenProperties(): Array<
    ERC721OrderPreSignedErc721TokenPropertiesStruct
  > {
    return this._event.parameters[10].value.toTupleArray<
      ERC721OrderPreSignedErc721TokenPropertiesStruct
    >();
  }
}

export class ERC721OrderPreSignedFeesStruct extends ethereum.Tuple {
  get recipient(): Address {
    return this[0].toAddress();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }

  get feeData(): Bytes {
    return this[2].toBytes();
  }
}

export class ERC721OrderPreSignedErc721TokenPropertiesStruct extends ethereum.Tuple {
  get propertyValidator(): Address {
    return this[0].toAddress();
  }

  get propertyData(): Bytes {
    return this[1].toBytes();
  }
}

export class ERC1155OrderCancelled extends ethereum.Event {
  get params(): ERC1155OrderCancelled__Params {
    return new ERC1155OrderCancelled__Params(this);
  }
}

export class ERC1155OrderCancelled__Params {
  _event: ERC1155OrderCancelled;

  constructor(event: ERC1155OrderCancelled) {
    this._event = event;
  }

  get maker(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get nonce(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ERC1155OrderFilled extends ethereum.Event {
  get params(): ERC1155OrderFilled__Params {
    return new ERC1155OrderFilled__Params(this);
  }
}

export class ERC1155OrderFilled__Params {
  _event: ERC1155OrderFilled;

  constructor(event: ERC1155OrderFilled) {
    this._event = event;
  }

  get direction(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get maker(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get taker(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get nonce(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get erc20Token(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get erc20FillAmount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get erc1155Token(): Address {
    return this._event.parameters[6].value.toAddress();
  }

  get erc1155TokenId(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get erc1155FillAmount(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get matcher(): Address {
    return this._event.parameters[9].value.toAddress();
  }
}

export class ERC1155OrderPreSigned extends ethereum.Event {
  get params(): ERC1155OrderPreSigned__Params {
    return new ERC1155OrderPreSigned__Params(this);
  }
}

export class ERC1155OrderPreSigned__Params {
  _event: ERC1155OrderPreSigned;

  constructor(event: ERC1155OrderPreSigned) {
    this._event = event;
  }

  get direction(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get maker(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get taker(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get expiry(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get nonce(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get erc20Token(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get erc20TokenAmount(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get fees(): Array<ERC1155OrderPreSignedFeesStruct> {
    return this._event.parameters[7].value.toTupleArray<
      ERC1155OrderPreSignedFeesStruct
    >();
  }

  get erc1155Token(): Address {
    return this._event.parameters[8].value.toAddress();
  }

  get erc1155TokenId(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get erc1155TokenProperties(): Array<
    ERC1155OrderPreSignedErc1155TokenPropertiesStruct
  > {
    return this._event.parameters[10].value.toTupleArray<
      ERC1155OrderPreSignedErc1155TokenPropertiesStruct
    >();
  }

  get erc1155TokenAmount(): BigInt {
    return this._event.parameters[11].value.toBigInt();
  }
}

export class ERC1155OrderPreSignedFeesStruct extends ethereum.Tuple {
  get recipient(): Address {
    return this[0].toAddress();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }

  get feeData(): Bytes {
    return this[2].toBytes();
  }
}

export class ERC1155OrderPreSignedErc1155TokenPropertiesStruct extends ethereum.Tuple {
  get propertyValidator(): Address {
    return this[0].toAddress();
  }

  get propertyData(): Bytes {
    return this[1].toBytes();
  }
}

export class ZeroEx extends ethereum.SmartContract {
  static bind(address: Address): ZeroEx {
    return new ZeroEx("ZeroEx", address);
  }
}
